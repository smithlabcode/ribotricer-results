import os
import errno

def mkdir_p(path):
    """Python version mkdir -p

    Parameters
    ----------
    path : string
           Path to directory to create
    """
    if path:
        try:
            os.makedirs(path)
        except OSError as exc:  # Python >2.5
            if exc.errno == errno.EEXIST and os.path.isdir(path):
                pass
            else:
                raise

SAMPLES = None
include:
    config['config_path']

if SAMPLES is None:
  SAMPLES = ['RNA_CCDS_lengths', 'RIBO_CCDS_lengths']

mkdir_p( os.path.join(OUT_DIR, 'slurm-logs'))

RIBORF_SRC_DIR = '/home/cmb-panasas2/skchoudh/github_projects/ribocop_tools_source/RibORF/RibORF.1.0/'

workdir: OUT_DIR

rule all:
  input:
    expand('ribORF_results/orfs/{sample_type}/pred.pvalue.parameters.txt', sample_type=SAMPLES)

rule bam_to_sam:
  input: INPUT_DIR + '/{sample_type}.bam'
  output: 'ribORF_results/sam_original/{sample_type}.sam'
  benchmark: 'time_benchmarks/riboORF_benchmark/bam_to_sam/{sample_type}.txt'
  shell:
    r'''samtools view -h -o {output} {input}'''


rule correct_offset:
  input: 'ribORF_results/sam_original/{sample_type}.sam'
  output: 'ribORF_results/sam_offsetcorrected/{sample_type}.sam'
  benchmark: 'time_benchmarks/riboORF_benchmark/correct_offset/{sample_type}.txt'
  params:
    offset_file = OFFSET_FILE,
    src_dir = RIBORF_SRC_DIR
  shell:
    r'''perl {params.src_dir}/offsetCorrect.pl -r {input} -p {params.offset_file} -o {output}'''


rule run_ribORF:
  input: 'ribORF_results/sam_offsetcorrected/{sample_type}.sam'
  output: 'ribORF_results/orfs/{sample_type}/pred.pvalue.parameters.txt'
  benchmark: 'time_benchmarks/riboORF_benchmark/run_ribORF/{sample_type}.txt'
  params:
    candidate_orfs = CANDIDATE_ORFS,
    src_dir = RIBORF_SRC_DIR,
    outdir = 'ribORF_results/orfs/{sample_type}'
  shell:
    r'''perl {params.src_dir}/ribORF.pl -f {input} -c {params.candidate_orfs} -o {params.outdir}'''
